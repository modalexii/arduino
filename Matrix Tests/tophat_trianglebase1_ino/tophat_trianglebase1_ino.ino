#include <Adafruit_GFX.h>
#include <Adafruit_NeoMatrix.h>
#include <Adafruit_NeoPixel.h>
#ifndef PSTR
 #define PSTR // Make Arduino Due happy
#endif

#define DATA_PIN 6

int MATRIX_WIDTH = 18;
int MATRIX_HEIGHT = 8;

Adafruit_NeoMatrix matrix = Adafruit_NeoMatrix(
  MATRIX_WIDTH,
  MATRIX_HEIGHT,
  DATA_PIN,
  NEO_MATRIX_BOTTOM + NEO_MATRIX_LEFT +
  NEO_MATRIX_ROWS   + NEO_MATRIX_ZIGZAG,
  NEO_GRB           + NEO_KHZ800 
);

int triangle1[8][18] = {
	{2016,2016,2016,2016,2016,63519,2016,2016,2016,2016,2016,63519,2016,2016,2016,2016,2016,63519},
	{2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016},
	{2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016},
	{2016,2016,63519,2016,2016,2016,2016,2016,63519,2016,2016,2016,2016,2016,63519,2016,2016,2016},
	{2016,2016,63519,2016,2016,2016,2016,2016,63519,2016,2016,2016,2016,2016,63519,2016,2016,2016},
	{2016,63519,63519,63519,2016,2016,2016,63519,63519,63519,2016,2016,2016,63519,63519,63519,2016,2016},
	{2016,63519,63519,63519,2016,2016,2016,63519,63519,63519,2016,2016,2016,63519,63519,63519,2016,2016},
	{63519,63519,63519,63519,63519,2016,63519,63519,63519,63519,63519,2016,63519,63519,63519,63519,63519,2016}
};

int triangle2[8][18] = {
	{2016,2016,63519,2016,2016,2016,2016,2016,63519,2016,2016,2016,2016,2016,63519,2016,2016,2016},
	{2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016},
	{2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016},
	{2016,2016,2016,2016,2016,63519,2016,2016,2016,2016,2016,63519,2016,2016,2016,2016,2016,63519},
	{2016,2016,2016,2016,2016,63519,2016,2016,2016,2016,2016,63519,2016,2016,2016,2016,2016,63519},
	{63519,2016,2016,2016,63519,63519,63519,2016,2016,2016,63519,63519,63519,2016,2016,2016,63519,63519},
	{63519,2016,2016,2016,63519,63519,63519,2016,2016,2016,63519,63519,63519,2016,2016,2016,63519,63519},
	{63519,63519,2016,63519,63519,63519,63519,63519,2016,63519,63519,63519,63519,63519,2016,63519,63519,63519}
};

int triangle3[8][18] = {
	{63519,63519,2016,63519,63519,63519,63519,63519,2016,63519,63519,63519,63519,63519,2016,63519,63519,63519},
	{63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519},
	{63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519},
	{63519,63519,63519,63519,63519,2016,63519,63519,63519,63519,63519,2016,63519,63519,63519,63519,63519,2016},
	{63519,63519,63519,63519,63519,2016,63519,63519,63519,63519,63519,2016,63519,63519,63519,63519,63519,2016},
	{2016,63519,63519,63519,2016,2016,2016,63519,63519,63519,2016,2016,2016,63519,63519,63519,2016,2016},
	{2016,63519,63519,63519,2016,2016,2016,63519,63519,63519,2016,2016,2016,63519,63519,63519,2016,2016},
	{2016,2016,63519,2016,2016,2016,2016,2016,63519,2016,2016,2016,2016,2016,63519,2016,2016,2016}
};

int triangle4[8][18] = {
	{63519,63519,63519,63519,63519,2016,63519,63519,63519,63519,63519,2016,63519,63519,63519,63519,63519,2016},
	{63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519},
	{63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519,63519},
	{63519,63519,2016,63519,63519,63519,63519,63519,2016,63519,63519,63519,63519,63519,2016,63519,63519,63519},
	{63519,63519,2016,63519,63519,63519,63519,63519,2016,63519,63519,63519,63519,63519,2016,63519,63519,63519},
	{63519,2016,2016,2016,63519,63519,63519,2016,2016,2016,63519,63519,63519,2016,2016,2016,63519,63519},
	{63519,2016,2016,2016,63519,63519,63519,2016,2016,2016,63519,63519,63519,2016,2016,2016,63519,63519},
	{2016,2016,2016,2016,2016,63519,2016,2016,2016,2016,2016,63519,2016,2016,2016,2016,2016,63519}
};

void setup(){
  matrix.begin();
  matrix.setBrightness(80);
  Serial.begin(9600);
}

/*
void loop() {
  Serial.println(matrix.Color(255,0,255));
}
*/

void loop(){
  matrix.fillScreen(0);
  for(int x = 0; x <= MATRIX_WIDTH; x++) {
    for(int y = 0; y <= MATRIX_HEIGHT; y++) {
      matrix.drawPixel(x,y,triangle1[y][x]);
    }
  }
  matrix.show();
  delay(850);
  for(int x = 0; x <= MATRIX_WIDTH; x++) {
    for(int y = 0; y <= MATRIX_HEIGHT; y++) {
      matrix.drawPixel(x,y,triangle2[y][x]);
    }
  }
  matrix.show();
  delay(850);
  for(int x = 0; x <= MATRIX_WIDTH; x++) {
    for(int y = 0; y <= MATRIX_HEIGHT; y++) {
      matrix.drawPixel(x,y,triangle3[y][x]);
    }
  }
  matrix.show();
  delay(850);
  for(int x = 0; x <= MATRIX_WIDTH; x++) {
    for(int y = 0; y <= MATRIX_HEIGHT; y++) {
      matrix.drawPixel(x,y,triangle4[y][x]);
    }
  }
  matrix.show();
  delay(850);
}

